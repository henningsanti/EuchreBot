(9/15/2019) 0. Implement manager and test no GUI games
(9/15/2019) 1. Get super comfortable with codebase by implementing game runner that just prints events and outcome into a file
(--) 2. Implement the basic AI using a heuristics table to make decisions
(9/16/2019)    Implement HighConservativeDecider
(9/16/2019)    Implemented performance test for HighConservativeDecider with all RandomDeciders
(9/22/2019)    Implement unit tests for HighConservativeDecider Sort
(9/22/2019)    Implement LowConservativeDecider, deduplicate ConservativeDeciders
(10/21/2019)   Implement complex play_cards (from Seelbinder)
(9/22/2019)     a.  Implement HighWithCaution
(10/21/2019)    b.  Unit test HighWithCaution
(--)           Implement Markov-based deciders
(10/24/2019)    a. Add in-round cards played memory
(10/24/2019)    b. Implement heuristics calculator and unit test
(10/26/2019)    c. Implement Seelbinder MDP ---> Actually this is retarded


(--)            c2. Implement winning probability calculator
(--)            c3. Implement Juanti MDP
(--)            d. Implement HUF
(--)    Add python packaging
(--)    Implement advanced bid, second_bid
(--)    Implement all algorithm combinations
(--)    Run performance tests
(--) 3. Backlog unittests (validate_play_card, ...)
(--) 4. Figure out machine learning plan
(--) 5. Train the model
(--) 6. Test the model
(--) 7. Build web application so that people can play against bots
(--) 8. Try multiplayer on web application


Notes:
- ending rounds when outcome is inevitable (3-0 dont play 2 more tricks)



Links:
  Reinforcement Learning:
  https://medium.com/applied-data-science/how-to-build-your-own-alphazero-ai-using-python-and-keras-7f664945c188

  EuchreBot
  https://scholarworks.unr.edu/bitstream/handle/11714/3774/Seelbinder_unr_0139M_11172.pdf?sequence=1&isAllowed=y



Juan's availability: Monday through Thursday after 5:30 pm CST or Sundays anytime after 2pm

Weekly meeting: Monday 5:30 pm
